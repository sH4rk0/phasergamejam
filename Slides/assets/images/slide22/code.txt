export default class Boot extends Phaser.Scene 
{
        private _sprite: Phaser.GameObjects.Sprite;
        private _runAnimation: Array<number> = [0, 1, 2, 3, 4, 5, 6, 7];
        private _idleAnimation: Array<number> = [8, 9, 10, 11, 12, 13];
        private _isRunning: Boolean;

        constructor() {
            super({key: "Boot"});
        }

        preload() {

            this.load.spritesheet("sprite", "assets/images/players.png", {
            frameWidth: 52,
            frameHeight: 70,
            endFrame: 84
            });

        }

        create(): void {

            this._sprite = this.add
            .sprite(this.game.canvas.width / 2, 600, "sprite")
            .setScale(2)
            .setInteractive();

            let _animation: any = {
            key: "run",
            frames: this.anims.generateFrameNumbers("sprite", {
            frames: this._runAnimation
            }),
            frameRate: 10,
            yoyo: false,
            repeat: -1
            };

            this.anims.create(_animation);

            _animation = {
            key: "idle",
            frames: this.anims.generateFrameNumbers("sprite", {
            frames: this._idleAnimation
            }),
            frameRate: 10,
            yoyo: false,
            repeat: -1
            };

            this.anims.create(_animation);

            this._sprite.play("idle");

            this._sprite.on("pointerdown", () => {
            if (this._isRunning) {
            this._sprite.play("idle", true);
            } else {
            this._sprite.play("run", true);
            }
            this._isRunning = !this._isRunning;
            });


        }

        update(): void {}

}